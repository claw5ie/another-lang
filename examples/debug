// Implement enums, onions, struct:
// enum Bar
// {
//   Hello,
//   World,
// };

// union Baz
// {
//   x :: i32,
//   y :: i64,
// };

// struct Foo
// {
//   x :: i32,
//   y :: i64,
// };

alias Foo = i32;
alias Foo = proc() void;

proc foo(x :: bool, y :: i32) i32
{
  proc baz()
  {
  }
  return x;
}

proc main(bool, i32)
{
  alias foo = i32;

  hello;
  2 + 2 * 2;
  (2 + 2) * 2;
  -2 + --2;
  !false && true || false;
  1 <= 2;
  (2+2)*2;
  2*(2+2);
  cast(2);
  cast(void *, 2);
  2 + cast(i32, 2,);
  2 + cast(4);

  if 2 + 2 then
    {
      if 2 2;
      2 = 2;
    }
  else
    {
      4 * 4;
    }

  while false do
    {
    }

  do
   { }
  while true;

  a :: int = 42;
  a :: i32 = 42;
  a :: i42 = 42;
  a = 69;
  b := false;

  a :: i42 = 42;
  b :: i42* = &a;
  c :: i42 = b**;

  a :: i32[3] = { 42, { 42 }, 90 };

  a[2][42] = 42;

  a :: proc(i32, hello :: bool);
  a :: proc(i32, hello :: bool) = null;

  return;
}
